default:
  tags:
    - docker
  artifacts:
    expire_in: 1 week

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

stages:
  - check
  - build
  - archive
  - publish
  - domain
  - integration
  - release

.check:
  stage: check
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:latest

clang-format:
  extends: .check
  script:
    - ci/check-formatting.sh

black:
  extends: .check
  script:
    - python3 -m venv .venv
    - .venv/bin/python -m pip install -r integration-tests/requirements.txt
    - .venv/bin/python -m pip install -r domain-tests/requirements.txt
    - .venv/bin/python -m black --version
    - .venv/bin/python -m black --check integration-tests
    - .venv/bin/python -m black --check domain-tests

cppcheck:
  extends: .check
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.build:
  stage: build
  before_script:
    - mkdir build
    - cd build
    - >
      conan remote add \
        --insert 0 \
        ecdc-conan-virtual \
        $ESS_ARTIFACTORY_ECDC_CONAN_VIRTUAL_REMOTE_URL
    - $SCL conan install --build missing ..
    - $SCL conan info ../conanfile.txt > CONAN_INFO
  after_script:
    - >
      conan remote add \
        ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_EXTERNAL_REMOTE_URL
    - >
      conan user \
        --password $ESS_ARTIFACTORY_ECDC_CONAN_TOKEN \
        --remote ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_USER
    # Store built packages to save build time on subsequent builds
    - conan upload '*' --all --confirm --remote ecdc-conan-external

build-debug:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON -DCOV=ON ..
    - $SCL ninja all UnitTests docs
    - $SCL ninja coverage
    - cat coverage.txt
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    paths:
      - build/coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

build-release:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL ../ci/configure-release.sh .. .
    - $SCL ninja all UnitTests docs
    - ./bin/kafka-to-nexus --version
    - ./bin/UnitTests --gtest_output=xml:test-output.xml
  artifacts:
    paths:
      - build/test-output.xml
      - build/CONAN_INFO
      - build/bin
      - build/lib
      - build/licenses
    reports:
      junit: build/test-output.xml

domain_tests:
  stage: domain
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  dependencies:
    - build-release
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  before_script:
    - ls
    - cd domain-tests
  script:
    - $SCL python -m venv venv
    - source venv/bin/activate
    - python -m pip install -r requirements.txt
    - pytest --file-maker-binary=../build/bin/file-maker --junitxml=DomainTestsOutput.xml
  artifacts:
    when: always
    paths:
      - domain-tests/DomainTestsOutput.xml
    reports:
      junit: Domain-tests/DomainTestsOutput.xml

build-alt-distro:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-$DISTRO-build-node:latest
  script:
    - $SCL cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON ..
    - $SCL ninja all UnitTests docs
    - ./bin/kafka-to-nexus --version
    - ./bin/UnitTests

  parallel:
    matrix:
      - DISTRO:
          - debian11
          - ubuntu2204
      - DISTRO: almalinux8
        SCL: scl enable gcc-toolset-12 --

archive:
  stage: archive
  image: alpine:latest
  dependencies:
    - build-release
  script:
    - cd build
    - mkdir -p archive/kafka-to-nexus/bin
    - cp ./bin/kafka-to-nexus archive/kafka-to-nexus/bin/
    - cp -r ./lib archive/kafka-to-nexus/
    - cp -r ./licenses archive/kafka-to-nexus/
    - cp ./CONAN_INFO archive/kafka-to-nexus/

    # Create file with build information
    - touch archive/kafka-to-nexus/BUILD_INFO
    - echo 'Repository replace_real_repo_name' >> archive/kafka-to-nexus/BUILD_INFO
    - echo 'Commit replace_git_commit' >> archive/kafka-to-nexus/BUILD_INFO
    - echo 'Jenkins build replace_build_id' >> archive/kafka-to-nexus/BUILD_INFO

    - cd archive
    - tar czf kafka-to-nexus-centos7.tar.gz kafka-to-nexus
  artifacts:
    paths:
      - build/archive/kafka-to-nexus-centos7.tar.gz

publish:
  stage: publish
  image: alpine/curl:latest
  dependencies:
    - archive
  before_script:
    - curl -fL https://install-cli.jfrog.io | sh
    - jf config add $ESS_ARTIFACTORY_ID --url=$ESS_ARTIFACTORY_URL --user=$ESS_ARTIFACTORY_ECDC_USER --password=$ESS_ARTIFACTORY_ECDC_GENERIC_TOKEN
    - jf config show
  script:
    - jf rt u --build-name="kafka-to-nexus-centos7" --build-number=${CI_JOB_ID} kafka-to-nexus-centos7.tar.gz ecdc-generic-release/${ARTIFACTORY_UPLOAD_PATH}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/${CI_DEFAULT_BRANCH}/${CI_PIPELINE_IID}/"
    - if: $CI_COMMIT_TAG
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/tags/${CI_COMMIT_TAG}/"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never

integration-tests:
  stage: integration
  image: docker:latest
  dependencies:
    - archive
  before_script:
    - cd integration-tests
    - ./setup.sh ../build/archive/kafka-to-nexus-centos7.tar.gz
  script:
    - ./run-integration-tests.sh
  after_script:
    - cd integration-tests
    - ./teardown.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    FILEWRITER_ZOOKEEPER_CONTAINER_NAME: zookeeper-$CI_JOB_ID
    FILEWRITER_KAFKA_CONTAINER_NAME: kafka-$CI_JOB_ID
    FILEWRITER_FILEWRITER_CONTAINER_NAME: filewriter-$CI_JOB_ID
    HTTP_PROXY: $ESS_HTTP_PROXY
    HTTPS_PROXY: $ESS_HTTP_PROXY
  artifacts:
    when: always
    paths:
      - integration-tests/IntegrationTestsOutput.xml
      - integration-tests/logs/*
      - integration-tests/output-files/*
    reports:
      junit: integration-tests/IntegrationTestsOutput.xml

keep-artifacts:
  stage: release
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - ls build/archive/kafka-to-nexus-centos7.tar.gz
  dependencies:
    - archive
  artifacts:
    paths:
      - build/archive/kafka-to-nexus-centos7.tar.gz
    expire_in: never
  rules:
    - if: $CI_COMMIT_TAG
