default:
  tags:
    - docker
  artifacts:
    expire_in: 1 week

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

variables:
  ALMALINUX9_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux9-conan:1.2.0-rc.4"
  CENTOS7_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/build-nodes/centos7:1.0"
  BUILD_DIR: "build"

stages:
  - test
  - build
  - archive
  - domain
  - integration
  - publish

clang-format:
  stage: test
  image: $ALMALINUX9_IMAGE
  script:
    - ci/check-formatting.sh
  allow_failure: true

black:
  stage: test
  image: $ALMALINUX9_IMAGE
  script:
    - python3 -m venv .venv
    - .venv/bin/python -m pip install -r integration-tests/requirements.txt
    - .venv/bin/python -m pip install -r domain-tests/requirements.txt
    - .venv/bin/python -m black --version
    - .venv/bin/python -m black --check integration-tests
    - .venv/bin/python -m black --check domain-tests

cppcheck:
  stage: test
  image: $ALMALINUX9_IMAGE
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml

.conan-config: &conan-config
  before_script:
    - |
      if [ -f /etc/os-release ]; then
        . /etc/os-release
        if [[ "$ID" == "centos" ]]; then
            CONAN_PROFILE=linux_x86_64_gcc11_legacy
            echo 'source /opt/rh/devtoolset-11/enable' >> ~/.bashrc
            source ~/.bashrc
        fi
      fi
    - conan config install $ESS_CONAN_CONFIG_URL

centos7-debug:
  stage: build
  image: $CENTOS7_IMAGE
  <<: *conan-config
  script:
    - mkdir -p $BUILD_DIR && cd $BUILD_DIR
    - conan install .. --build=missing
    - conan info ../conanfile.txt > CONAN_INFO
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON -DCOV=ON ..
    - ninja all UnitTests docs
    - ninja coverage
    - cat coverage.txt
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    paths:
      - $BUILD_DIR/coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $BUILD_DIR/coverage.xml


centos7-release:
  stage: build
  image: $CENTOS7_IMAGE
  <<: *conan-config
  script:
    - mkdir -p $BUILD_DIR && cd $BUILD_DIR
    - conan install .. --build=missing
    - conan info ../conanfile.txt > CONAN_INFO
    - ../ci/configure-release.sh .. .
    - ninja all UnitTests docs
    - ./bin/kafka-to-nexus --version
    - ./bin/UnitTests --gtest_output=xml:test-output.xml
  artifacts:
    paths:
      - $BUILD_DIR/test-output.xml
      - $BUILD_DIR/CONAN_INFO
      - $BUILD_DIR/bin
      - $BUILD_DIR/lib
      - $BUILD_DIR/licenses
    reports:
      junit: $BUILD_DIR/test-output.xml

almalinux9-debug:
  stage: build
  image: $ALMALINUX9_IMAGE
  <<: *conan-config
  script:
    - mkdir -p $BUILD_DIR && cd $BUILD_DIR
    - conan install .. --build=missing --profile=linux_x86_64_gcc11
    - conan info ../conanfile.txt > CONAN_INFO
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON ..
    - ninja all UnitTests docs
    - ./bin/kafka-to-nexus --version
    - ./bin/UnitTests

archive:
  stage: archive
  image: alpine:latest
  dependencies:
    - centos7-release
  script:
    - mkdir -p archive/kafka-to-nexus
    - cp -a ./bin archive/kafka-to-nexus
    - cp -a ./lib archive/kafka-to-nexus
    - cp -a ./licenses archive/kafka-to-nexus
    - cp ./CONAN_INFO archive/kafka-to-nexus
    - tar czf kafka-to-nexus-centos7.tar.gz -C archive kafka-to-nexus
  artifacts:
    paths:
      - $BUILD_DIR/kafka-to-nexus-centos7.tar.gz

domain_tests:
  stage: domain
  image: $CENTOS7_IMAGE
  dependencies:
    - centos7-release
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  before_script:
    - cd domain-tests
  script:
    - $SCL python -m venv venv
    - source venv/bin/activate
    - python -m pip install -r requirements.txt
    - pytest --file-maker-binary=../$BUILD_DIR/bin/file-maker --junitxml=DomainTestsOutput.xml
  artifacts:
    when: always
    paths:
      - domain-tests/DomainTestsOutput.xml
    reports:
      junit: domain-tests/DomainTestsOutput.xml

integration-tests:
  stage: integration
  image: docker:latest
  dependencies:
    - archive
  before_script:
    - cd integration-tests
    - ./setup.sh ../$BUILD_DIR/kafka-to-nexus-centos7.tar.gz
  script:
    - ./run-integration-tests.sh
  after_script:
    - cd integration-tests
    - ./teardown.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    FILEWRITER_ZOOKEEPER_CONTAINER_NAME: zookeeper-$CI_JOB_ID
    FILEWRITER_KAFKA_CONTAINER_NAME: kafka-$CI_JOB_ID
    FILEWRITER_FILEWRITER_CONTAINER_NAME: filewriter-$CI_JOB_ID
    HTTP_PROXY: $ESS_HTTP_PROXY
    HTTPS_PROXY: $ESS_HTTP_PROXY
  artifacts:
    when: always
    paths:
      - integration-tests/IntegrationTestsOutput.xml
      - integration-tests/logs/*
      - integration-tests/output-files/*
    reports:
      junit: integration-tests/IntegrationTestsOutput.xml

publish:
  stage: publish
  image: alpine/curl:latest
  dependencies:
    - archive
  before_script:
    - cp $BUILD_DIR/kafka-to-nexus-centos7.tar.gz .
    - curl -fL https://install-cli.jfrog.io | sh
    - jf config add $ESS_ARTIFACTORY_ID --url=$ESS_ARTIFACTORY_URL --user=$ESS_ARTIFACTORY_ECDC_USER --password=$ESS_ARTIFACTORY_ECDC_GENERIC_TOKEN
    - jf config show
  script:
    - jf rt u --build-name="kafka-to-nexus-centos7" --build-number=${CI_PIPELINE_IID} kafka-to-nexus-centos7.tar.gz ecdc-generic-release/${ARTIFACTORY_UPLOAD_PATH}
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/${CI_DEFAULT_BRANCH}/${CI_PIPELINE_IID}/"
    - if: $CI_COMMIT_TAG
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/tags/${CI_COMMIT_TAG}/"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
