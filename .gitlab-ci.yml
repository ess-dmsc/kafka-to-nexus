default:
  tags:
    - docker
  artifacts:
    expire_in: 1 week

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

variables:
  ALMALINUX9_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux9-conan:1.3.1"
  CENTOS7_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-conan:1.2.0"
  CONAN_USER_HOME: "$CI_PROJECT_DIR"

stages:
  - setup
  - check
  - build
  - test
  - publish

conan_setup:
  stage: setup
  image: $ALMALINUX9_IMAGE
  script:
    - conan config install http://github.com/ess-dmsc/conan-configuration.git
  artifacts:
    paths:
      - .conan/
    expire_in: 1 hour
    when: always

clang-format:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - find . -type f \( -name '*.cpp' -o -name '*.cxx' -o -name '*.c' -o -name '*.h' \) > clang_format_files.txt
    - xargs clang-format --dry-run --Werror < clang_format_files.txt

black:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r integration-tests/requirements.txt
    - pip install -r domain-tests/requirements.txt
    - black --version
    - black --check integration-tests
    - black --check domain-tests

cppcheck:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml

centos7-release:
  stage: build
  image: $CENTOS7_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Release -s build_type=Release --build=missing --build=hdf5 --profile=linux_x86_64_gcc11_legacy
    - rm CMakeUserPresets.json
    - cmake --preset=release
    - cmake --build --preset=release

    # Creating distribution files
    - conan export-pkg . kafka-to-nexus/$VERSION@ -f -bf=build/Release
    - PKG_PATH=$(find .conan/data/kafka-to-nexus/$VERSION/_/_/package -mindepth 1 -maxdepth 1 -type d | head -n 1)
    - ARCHIVE_NAME="kafka-to-nexus-${VERSION}-centos7.tar.gz"
    - mkdir -p dist/kafka-to-nexus
    - cp -r ${PKG_PATH}/* dist/kafka-to-nexus/ # unpacked
    - tar czf dist/$ARCHIVE_NAME -C $PKG_PATH .
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        VERSION: ${CI_COMMIT_SHORT_SHA}
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: ${CI_COMMIT_TAG}
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        VERSION: ${CI_COMMIT_SHORT_SHA}
  artifacts:
    paths:
      - build/
      - dist/

almalinux9-release:
  stage: build
  image: $ALMALINUX9_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Release -s build_type=Release --build=missing --profile=linux_x86_64_gcc11
    - rm CMakeUserPresets.json # workaround, will be removed once we switch to conan 2
    - cmake --preset=release
    - cmake --build --preset=release --target all docs
    
    # Creating distribution files
    - conan export-pkg . kafka-to-nexus/$VERSION@ -f -bf=build/Release
    - PKG_PATH=$(find .conan/data/kafka-to-nexus/$VERSION/_/_/package -mindepth 1 -maxdepth 1 -type d | head -n 1)
    - ARCHIVE_NAME="kafka-to-nexus-${VERSION}-almalinux9.tar.gz"
    - mkdir -p dist/kafka-to-nexus
    - cp -r ${PKG_PATH}/* dist/kafka-to-nexus/ # unpacked
    - tar czf dist/$ARCHIVE_NAME -C $PKG_PATH .
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        VERSION: ${CI_COMMIT_SHORT_SHA}
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: ${CI_COMMIT_TAG}
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        VERSION: ${CI_COMMIT_SHORT_SHA}
  artifacts:
    paths:
      - build/
      - dist/

unit-tests:
  stage: test
  image: $ALMALINUX9_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Debug -s build_type=Debug --build=missing --profile=linux_x86_64_gcc11
    - rm CMakeUserPresets.json
    - cmake --preset=debug
    - cmake --build --preset=debug
    - ctest --preset debug --output-on-failure
    - cmake --build --preset=debug --target coverage
  coverage: '/lines:\s+(\d+\.\d+)%/'
  artifacts:
    paths:
      - build/Debug/coverage/
    reports:
      junit: build/Debug/tests/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: build/Debug/coverage/coverage.xml

domain-tests:
  stage: test
  image: $CENTOS7_IMAGE
  dependencies:
    - centos7-release
  script:
    - cd domain-tests
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pytest --file-maker-binary=../dist/kafka-to-nexus/bin/file-maker --junitxml=DomainTestsOutput.xml
  artifacts:
    when: always
    paths:
      - domain-tests/DomainTestsOutput.xml
    reports:
      junit: domain-tests/DomainTestsOutput.xml

integration-tests:
  stage: test
  image: docker:latest
  dependencies:
    - centos7-release
  before_script:
    - cd integration-tests
    - ARCHIVE_PATH=$(find ../dist -mindepth 1 -maxdepth 1 -type f | head -n 1)
    - ./setup.sh $ARCHIVE_PATH
  script:
    - ./run-integration-tests.sh
  after_script:
    - cd integration-tests
    - ./teardown.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    FILEWRITER_ZOOKEEPER_CONTAINER_NAME: zookeeper-$CI_JOB_ID
    FILEWRITER_KAFKA_CONTAINER_NAME: kafka-$CI_JOB_ID
    FILEWRITER_FILEWRITER_CONTAINER_NAME: filewriter-$CI_JOB_ID
    HTTP_PROXY: $ESS_HTTP_PROXY
    HTTPS_PROXY: $ESS_HTTP_PROXY
  artifacts:
    when: always
    paths:
      - integration-tests/IntegrationTestsOutput.xml
      - integration-tests/logs/*
      - integration-tests/output-files/*
    reports:
      junit: integration-tests/IntegrationTestsOutput.xml

publish-tar-archives:
  stage: publish
  image: alpine/curl:latest
  dependencies:
    - centos7-release
    - almalinux9-release
  before_script:
    - curl -fL https://install-cli.jfrog.io | sh
    - jf config add $ESS_ARTIFACTORY_ID --url=$ESS_ARTIFACTORY_URL --user=$ESS_ARTIFACTORY_ECDC_USER --password=$ESS_ARTIFACTORY_ECDC_GENERIC_TOKEN
  script:
    - jf rt u --build-name="kafka-to-nexus-almalinux9" --build-number=${CI_PIPELINE_IID} "dist/*.tar.gz" ecdc-generic-release/${ARTIFACTORY_UPLOAD_PATH} --flat=true
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/${CI_DEFAULT_BRANCH}/${CI_PIPELINE_IID}/"
    - if: $CI_COMMIT_TAG
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/tags/${CI_COMMIT_TAG}/"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
