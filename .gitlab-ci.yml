default:
  tags:
    - docker
  artifacts:
    expire_in: 1 week

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

variables:
  ALMALINUX9_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux9-conan:1.3.1"
  CENTOS7_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-conan:1.2.0-dev.1"
  BUILD_DIR: "build"
  CONAN_USER_HOME: "$CI_PROJECT_DIR"

stages:
  - setup
  - check
  - build
  - archive
  - domain
  - integration
  - publish

conan_setup:
  stage: setup
  image: $ALMALINUX9_IMAGE
  script:
    - conan config install http://github.com/ess-dmsc/conan-configuration.git
  artifacts:
    paths:
      - .conan/
    expire_in: 1 hour
    when: always


clang-format:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - find . -type f \( -name '*.cpp' -o -name '*.cxx' -o -name '*.c' -o -name '*.h' \) > clang_format_files.txt
    - xargs clang-format --dry-run --Werror < clang_format_files.txt

black:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r integration-tests/requirements.txt
    - pip install -r domain-tests/requirements.txt
    - black --version
    - black --check integration-tests
    - black --check domain-tests

cppcheck:
  stage: check
  image: $ALMALINUX9_IMAGE
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml

centos7-debug:
  stage: build
  image: $CENTOS7_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Debug -s build_type=Debug --build=missing --build=hdf5 --profile=linux_x86_64_gcc11_legacy 
    - rm CMakeUserPresets.json
    - cmake --preset=debug
    - cmake --build --preset=debug

centos7-release:
  stage: build
  image: $CENTOS7_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Release -s build_type=Release --build=missing --build=hdf5 --profile=linux_x86_64_gcc11_legacy
    - rm CMakeUserPresets.json
    - cmake --preset=release
    - cmake --build --preset=release
    - conan export-pkg . -pr linux_x86_64_gcc11 -f -bf=build/Release
  artifacts:
    paths:
      - $BUILD_DIR/
      - $CI_PROJECT_DIR/.conan/data/kafka-to-nexus/

almalinux9-debug:
  stage: build
  image: $ALMALINUX9_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Debug -s build_type=Debug --build=missing --profile=linux_x86_64_gcc11
    - rm CMakeUserPresets.json
    - cmake --preset=debug
    - cmake --build --preset=debug
  artifacts:
    paths:
      - $BUILD_DIR/

almalinux9-release:
  stage: build
  image: $ALMALINUX9_IMAGE
  dependencies:
    - conan_setup
  script:
    - conan install . -if=build/Release -s build_type=Release --build=missing --profile=linux_x86_64_gcc11
    - rm CMakeUserPresets.json # workaround, will be removed once we switch to conan 2
    - cmake --preset=release
    - cmake --build --preset=release
  artifacts:
    paths:
      - $BUILD_DIR/
